#!/bin/bash
#  This script takes 3 parameters.  
# 1 - The name of the detector (ADProsilica, etc.)
# 2 - The version number (R2-0, etc.)
# 3 - The EPICS architecture (linux-x86_64, etc.)

echo "Parameter 1 = " $1
echo "Parameter 2 = " $2
echo "Parameter 3 = " $3

find . -name 'auto_settings.sav_*' -exec rm -fv {} \;
find . -name 'auto_settings.savB*' -exec rm -fv {} \;
find . -name 'core.*' -exec rm -fv {} \;
find . -name '*.exe.*' -exec rm -fv {} \;

AREA_DETECTOR=areaDetector-3-2
ASYN=asyn-4-33
AUTOSAVE=autosave-5-9
BUSY=busy-1-7
CALC=calc-3-7
DEVIOCSTATS=iocStats-3-1-15
SEQ=seq-2-2-5
SSCAN=sscan-2-11-1
BASE_TOP=/epics
BASE=base-7-0-1-1
SUPPORT=/epics/synApps/support
DESTINATION=../$1_Prebuilt_$AREA_DETECTOR_$2_$3

mkdir -p $DESTINATION
HOME=$(pwd)

cd $DESTINATION
DESTINATION=$(pwd)
cd $HOME

cd $BASE_TOP
cp --parents -r -n $BASE/bin/$3 $DESTINATION
cp --parents -r -n $BASE/lib/$3 $DESTINATION
cd $SUPPORT
cp --parents -r -n $AREA_DETECTOR/ADCore/db $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADCore/documentation $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADCore/ADApp/Db $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADCore/ADApp/op $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADCore/iocBoot $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADViewers/ImageJ $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADCore/bin/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADCore/lib/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADSupport/bin/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/ADSupport/lib/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/db $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/bin/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/lib/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/documentation $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/iocs/*IOC/bin/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/iocs/*IOC/lib/$3 $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/iocs/*IOC/dbd $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/iocs/*IOC/iocBoot $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/*/Db $DESTINATION
cp --parents -r -n $AREA_DETECTOR/$1/*/op $DESTINATION
cp --parents -r -n $ASYN/opi $DESTINATION
cp --parents -r -n $ASYN/db $DESTINATION
cp --parents -r -n $ASYN/bin/$3 $DESTINATION
cp --parents -r -n $ASYN/lib/$3 $DESTINATION
cp --parents -r -n $AUTOSAVE/asApp/ $DESTINATION
cp --parents -r -n $AUTOSAVE/asApp/op $DESTINATION
cp --parents -r -n $AUTOSAVE/bin/$3 $DESTINATION
cp --parents -r -n $AUTOSAVE/lib/$3 $DESTINATION
cp --parents -r -n $BUSY/busyApp/Db $DESTINATION
cp --parents -r -n $BUSY/busyApp/op $DESTINATION
cp --parents -r -n $BUSY/bin/$3 $DESTINATION
cp --parents -r -n $BUSY/lib/$3 $DESTINATION
cp --parents -r -n $CALC/calcApp/Db $DESTINATION
cp --parents -r -n $CALC/calcApp/ $DESTINATION
cp --parents -r -n $CALC/bin/$3 $DESTINATION
cp --parents -r -n $CALC/lib/$3 $DESTINATION
cp --parents -r -n $DEVIOCSTATS/db $DESTINATION
cp --parents -r -n $DEVIOCSTATS/op/adl $DESTINATION
cp --parents -r -n $DEVIOCSTATS/bin/$3 $DESTINATION
cp --parents -r -n $DEVIOCSTATS/lib/$3 $DESTINATION
cp --parents -r -n $SEQ/bin/$3 $DESTINATION
cp --parents -r -n $SEQ/lib/$3 $DESTINATION
cp --parents -r -n $SSCAN/sscanApp/Db $DESTINATION
cp --parents -r -n $SSCAN/sscanApp/op $DESTINATION
cp --parents -r -n $SSCAN/bin/$3 $DESTINATION
cp --parents -r -n $SSCAN/lib/$3 $DESTINATION
cd $HOME


wasPrebuilt=$(ls $DESTINATION/$AREA_DETECTOR/$1/iocs/*IOC/iocBoot/ioc* | grep prebuilt_unique.cmd)
# if [ -z "$wasPrebuilt" ]; then
    cp -n components/prebuilt_unique.cmd $DESTINATION/$AREA_DETECTOR/$1/iocs/*IOC/iocBoot/ioc*
    cp -n components/prebuilt_config $DESTINATION/$AREA_DETECTOR/$1/iocs/*IOC/iocBoot/ioc*
    cd $DESTINATION/$AREA_DETECTOR/$1/iocs/*IOC/iocBoot/ioc*
    echo moving EPICS variable declarations to prebuilt_unique.cmd...
    echo >> prebuilt_unique.cmd
    echo \# additional EPICS variables extracted from st.cmd >> prebuilt_unique.cmd
    UNIQUE="$(grep '< unique.cmd' st.cmd)"
    if [ -z "$UNIQUE" ]; then
	env=$(grep '< envPaths' st.cmd)
	if ! [ -z "$env" ]; then
	    sed -i '/< envPaths/a < prebuilt_unique.cmd' st.cmd
	else
	    sed -i "1i< prebuilt_unique.cmd" st.cmd
	fi
    fi
    hasEnv="$(grep 'epicsEnvSet(' st.cmd)"
    if ! [ -z "$hasEnv" ]; then
	grep 'epicsEnvSet(' st.cmd | while read line; do
	    var=$(echo $line | cut -d \" -f 2)
	    echo var: $var
	    varLineNum=$(grep -n -m 1 $var prebuilt_unique.cmd | grep -Eo '^[^:]+')
	    isComment=$(echo $line | grep \#)
	    if ! [ -z "$varLineNum" ] && [ -z "$isComment" ]; then
		oldLine=$(sed "${varLineNum}q;d" prebuilt_unique.cmd)
		sed -i "${varLineNum}s/$oldLine/$line/" prebuilt_unique.cmd
	    else
		echo $line >> prebuilt_unique.cmd
	    fi
	done
    fi
    grep -v 'epicsEnvSet(' st.cmd > temp
    mv temp st.cmd
    sed -i '1i# all epicsEnvSet calls moved to prebuilt_unique.cmd' st.cmd
    echo done.
# fi
